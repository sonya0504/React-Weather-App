{"version":3,"sources":["context.js","theme/GlobalStyle.js","theme/mainTheme.js","components/atoms/Heading/Heading.js","templates/MainTemplate.js","theme/device.js","assets/icons/marker.svg","components/atoms/Input/Input.js","components/atoms/Button/Button.js","components/molecules/Form/Form.js","views/MainView.js","components/atoms/WeatherImage/WeatherImage.js","components/atoms/Description/Description.js","assets/icons/back.svg","components/molecules/Header/Header.js","components/molecules/DateSection/DateSection.js","components/atoms/WeatherComponent/WeatherComponent.js","assets/icons/feelsLike.svg","assets/icons/humidity.svg","assets/icons/pressure.svg","assets/icons/tempMax.svg","assets/icons/tempMin.svg","assets/icons/windSpeed.svg","components/organisms/WeatherDetailsSection/WeatherDetailsSection.js","components/molecules/WeatherForecast/WeatherForecast.js","components/molecules/WeatherForecastSection/WeatherForecastSection.js","views/DetailsView.js","views/Root.js","index.js"],"names":["AppContext","React","createContext","GlobalStyle","createGlobalStyle","theme","colors","dark","bright","accent","fontWeight","regular","medium","bold","fontSize","xxs","xs","s","m","l","xl","xxl","xxxl","Heading","styled","h1","big","StyledWrapper","div","MainTemplate","title","children","as","defaultProps","sizes","devices","mobileS","mobileM","mobileL","tablet","laptop","laptopL","desktop","Input","input","markerIcon","grey300","Button","button","StyledForm","form","Form","Consumer","context","onSubmit","getWeather","placeholder","name","onChange","getCityName","redirect","to","type","StyledSection","section","StyledHeading","StyledSpan","span","MainView","errorMessageCurrent","errorMessageForecast","StyledImage","img","WeatherImage","imgSrc","imgAlt","src","alt","Description","p","StyledCityName","header","StyledImageWrapper","StyledWeatherImage","StyledButton","backIcon","StyledDescription","Header","cityName","mainDescription","goBack","DateSection","clock","day","StyledDesccription","WeatherComponent","image","value","StyledInformationWrapper","StyledMainConditions","WeatherDetailsSection","description","feelsLike","humidity","temp","tempMax","tempMin","pressure","windSpeed","weatherConditions","icon","humidityIcon","feelsLikeIcon","pressureIcon","tempMaxIcon","tempMinIcon","windSpeedIcon","StyledWeatherForecastWrapper","StyledDate","nextDay","index","today","Date","setDate","getDate","getMonth","WeatherForecast","WeatherForecastSection","date","forecast","map","item","weather","toFixed","id","StyledMain","main","DetailsView","weatherData","city","wind","speed","temp_max","temp_min","feels_like","showForecast","onClick","getForecastWeather","forecastWeatherData","daily","days","months","apiKey","process","Root","state","time","coordinates","lon","lat","e","preventDefault","setState","target","checkCurrentWeather","a","apiUrl","fetch","response","json","data","cod","coord","message","checkForecastWeather","this","intervalId","setInterval","tick","clearInterval","toLocaleTimeString","navigator","language","hour","minute","getDay","contextElement","Provider","exact","path","element","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06cd781a.chunk.js","sourcesContent":["import React from 'react';\n\nconst AppContext = React.createContext();\n\nexport default AppContext;","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle `\n\n    *, *::before, *::after {\n        box-sizing: border-box;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n    }\n\n    html {\n        font-size: 62.5%; \n    }\n\n    body {\n        font-size: 1.6rem; \n        background-color: ${({ theme }) => theme.colors.dark};\n        color: ${({ theme }) => theme.colors.bright}\n    }\n\n\n`;\n\nexport default GlobalStyle;","export const theme = {\n    colors: {\n        dark: 'hsl(0, 0%, 15%)',\n        bright: 'hsl(0, 0%, 87%)',\n        accent: 'hsl(178, 54%, 38%)',\n    },\n    fontWeight: {\n        regular: 300,\n        medium: 400,\n        bold: 600,\n    },\n    fontSize: {\n        xxs: '1rem',\n        xs: '1.2rem',\n        s: '1.6rem',\n        m: '2.1rem',\n        l: '2.4rem',\n        xl: '4rem',\n        xxl: '5rem',\n        xxxl: '7rem',\n    },\n}","import styled from \"styled-components\";\n\nconst Heading = styled.h1`\n    font-size: ${({ theme, big }) => big ? theme.fontSize.xl : theme.fontSize.l};\n    font-weight: ${({theme}) => theme.fontWeight.bold};\n`;\n\nexport default Heading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { ThemeProvider } from 'styled-components';\nimport GlobalStyle from 'theme/GlobalStyle';\nimport { theme } from 'theme/mainTheme';\nimport Heading from 'components/atoms/Heading/Heading';\n\nconst StyledWrapper = styled.div`\n    height: 100vh;\n    display: flex;\n`;\n\nconst MainTemplate = ({ title, children }) => (\n    <>\n    <ThemeProvider theme={theme}>\n    <GlobalStyle />\n        <>\n            <StyledWrapper>\n                { title && <Heading big as='h1'>{title}</Heading>}\n                {children}\n            </StyledWrapper>\n        </>\n    </ThemeProvider></>\n);\n\nMainTemplate.propTypes = {\n    children: PropTypes.element.isRequired,\n    title: PropTypes.string,\n}\n\nMainTemplate.defaultProps = {\n    title: null,\n}\n\n\nexport default MainTemplate;","const sizes = {\n    mobileS: '320px',\n    mobileM: '375px',\n    mobileL: '425px',\n    tablet: '768px',\n    laptop: '1024px',\n    laptopL: '1440px',\n    desktop: '2560px',\n};\n\nexport const devices = {\n    mobileS: `(min-width: ${sizes.mobileS})`,\n    mobileM: `(min-width: ${sizes.mobileM})`,\n    mobileL: `(min-width: ${sizes.mobileL})`,\n    tablet: `(min-width: ${sizes.tablet})`,\n    laptop: `(min-width: ${sizes.laptop})`,\n    laptopL: `(min-width: ${sizes.laptopL})`,\n    desktop: `(min-width: ${sizes.desktop})`,\n};","export default __webpack_public_path__ + \"static/media/marker.8f2b492c.svg\";","import styled from \"styled-components\";\nimport markerIcon from 'assets/icons/marker.svg';\n\nconst Input = styled.input `\n    padding: 15px 30px;\n    font-size: ${({theme}) => theme.fontSize.s};\n    font-weight: ${({theme}) => theme.fontWeight.regular};\n    background-color: transparent;\n    border: 1px solid ${({ theme }) => theme.colors.accent};\n    border-radius: 50px;\n    padding: 10px 20px 10px 40px;\n    font-size: ${({ theme }) => theme.fontSize.s};\n    background-image: url(${markerIcon});\n    background-size: 15px;\n    background-position: 15px 50%;\n    background-repeat: no-repeat;\n    height: 50px;\n    width: 100%;\n    display: block;\n    text-align: center;\n    text-transform: uppercase;\n    color: ${({ theme }) => theme.colors.bright};\n\n    ::placeholder {\n        text-transform: uppercase;\n        letter-spacing: 1px;\n        color: ${({theme}) => theme.colors.grey300}\n    }\n\n    :focus {\n        border: 1px solid ${({ theme }) => theme.colors.accent};\n        outline: none;\n    }\n\n`;\n\nexport default Input;","import styled from 'styled-components';\n\nconst Button = styled.button `\n    padding: 0;\n    background-color: ${({ theme }) => theme.colors.accent};\n    width: 100%;\n    height: 50px;\n    border: none;\n    border-radius: 50px;\n    font-weight: ${({ theme }) => theme.fontWeight.bold};\n    font-size: ${({ theme }) => theme.fontSize.s};\n    text-transform: uppercase;\n    color: ${({ theme }) => theme.colors.bright};\n    display: block;\n`;\n\nexport default Button;","import React from \"react\";\nimport { Navigate } from 'react-router-dom';\nimport styled from \"styled-components\";\nimport AppContext from \"context\";\nimport Input from \"components/atoms/Input/Input\";\nimport Button from \"components/atoms/Button/Button\";\n\nconst StyledForm = styled.form`\n    width: 320px;\n    height: 150px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    margin: 0 auto;\n`;\n\nconst Form = () => (\n\n    <AppContext.Consumer>\n        {(context) => (\n            <StyledForm onSubmit={context.getWeather}>\n                <Input placeholder='enter location' name='city' onChange={context.getCityName} />\n                {context.redirect ? <Navigate to='/details'/> : null}\n                <Button type='submit'>check</Button>\n            </StyledForm>\n        )}\n    </AppContext.Consumer>\n);\n\nexport default Form;","import React from \"react\";\nimport styled from \"styled-components\";\nimport AppContext from \"context\";\nimport { devices } from \"theme/device\";\nimport Heading from \"components/atoms/Heading/Heading\";\nimport Form from \"components/molecules/Form/Form\";\n\nconst StyledSection = styled.section`\n    padding: 20px;\n\n    @media ${devices.tablet} {\n        width: 500px;\n        margin: 100px auto 0;\n    }\n`;\n\nconst StyledHeading = styled(Heading)`\n    margin-bottom: 50px;\n    text-align: center;\n`;\n\nconst StyledSpan = styled.span`\n    color: ${({ theme }) => theme.colors.accent};\n`;\n\nconst MainView = () => {\n\n    return (\n    <AppContext.Consumer>\n        {(context) => (\n            <StyledSection>\n                {(context.errorMessageCurrent || context.errorMessageForecast) ? (\n                    <StyledHeading big>I have not found such a <StyledSpan>city</StyledSpan>. Try to write down other</StyledHeading>\n                    ) : (\n                    <StyledHeading big>Enter the <StyledSpan>city</StyledSpan> where you want to check the <StyledSpan>weather</StyledSpan></StyledHeading>\n                )}\n                <Form />\n            </StyledSection>\n        )}\n    </AppContext.Consumer>\n);\n    }\n\nexport default MainView;","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledImage = styled.img`\n    width: 50px;\n    height: 50px;\n`;\n\nconst WeatherImage = ({ imgSrc, imgAlt }) => (\n    <StyledImage src={imgSrc} alt={imgAlt}></StyledImage>\n);\n\nexport default WeatherImage;","import styled from \"styled-components\";\n\nconst Description = styled.p `\n    font-size: ${({theme}) => theme.fontSize.s};\n    font-weight: ${({theme}) => theme.fontWeight.regular};\n`;\n\nexport default Description;","export default __webpack_public_path__ + \"static/media/back.174166da.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { devices } from \"theme/device\";\nimport WeatherImage from \"components/atoms/WeatherImage/WeatherImage\";\nimport Heading from \"components/atoms/Heading/Heading\";\nimport Description from \"components/atoms/Description/Description\";\nimport Button from \"components/atoms/Button/Button\";\nimport markerIcon from 'assets/icons/marker.svg';\nimport backIcon from 'assets/icons/back.svg';\n\nconst StyledCityName = styled.header`\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: end;\n    justify-content: center;\n    padding-bottom: 30px;\n    background-color: ${({ theme }) => theme.colors.dark};\n    `;\n\nconst StyledImageWrapper = styled.div`\n    margin-right: 20px;\n    margin-left: 20px;\n`;\n\nconst StyledWeatherImage = styled(WeatherImage)`\n    display: block;\n`;\n\nconst StyledButton = styled(Button)`\nbackground-color: transparent;\n    background-image: url(${backIcon});\n    background-position: center;\n    background-size: contain;\n    background-repeat: no-repeat;\n    width: 30px;\n    height: 30px;\n    border-radius: 5px;\n`;\n\nconst StyledDescription = styled(Description)`\n    margin-top: 0;\n    margin-bottom: 0;\n`;\n\nconst StyledHeading = styled(Heading)`\n    color: ${({ theme }) => theme.colors.accent};\n    font-size: ${({ theme }) => theme.fontSize.xl};\n    margin-bottom: 0;\n    margin-top: 0;\n\n    @media ${devices.tablet} {\n        font-size: ${({ theme }) => theme.fontSize.xxl};\n    }\n`;\n\nconst Header = ({ cityName, mainDescription, imgSrc, imgAlt, goBack }) => (\n    <StyledCityName> \n        <StyledButton />\n        <StyledImageWrapper>\n            <StyledWeatherImage imgSrc={imgSrc} imgAlt={imgAlt} />\n            <StyledDescription>{mainDescription}</StyledDescription>\n        </StyledImageWrapper>\n        <StyledHeading>{cityName}</StyledHeading>\n        <StyledImageWrapper>\n            <StyledWeatherImage imgSrc={markerIcon} imgAlt='change city' />\n        </StyledImageWrapper>\n    </StyledCityName>\n);\n\nexport default Header;","import React from 'react';\nimport AppContext from 'context';\nimport styled from 'styled-components';\nimport Heading from 'components/atoms/Heading/Heading';\nimport Description from 'components/atoms/Description/Description';\n\nconst StyledWrapper = styled.section`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n`;\n\nconst StyledHeading = styled(Heading)`\n    font-size: ${({ theme }) => theme.fontSize.xxl};\n    font-weight: ${({ theme }) => theme.fontWeight.medium};\n    margin: 0;\n`;\n\nconst StyledDescription = styled(Description)`\n    margin: 0;\n    color: ${({ theme }) => theme.colors.accent}\n`;\n\n\nconst DateSection = () => (\n    <AppContext.Consumer>\n        {(context) => (\n            <StyledWrapper>\n                <StyledHeading as='h1'>{context.clock}</StyledHeading>\n                <StyledDescription>{context.day}</StyledDescription>\n            </StyledWrapper>\n        )}\n    </AppContext.Consumer>\n);\n\nexport default DateSection;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nimport Description from \"../Description/Description\";\n\n\nconst StyledWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n`;\n\nconst StyledImage = styled.img`\n    width:  ${({ theme }) => theme.fontSize.s};;\n    height:  ${({ theme }) => theme.fontSize.s};;\n    display: block;\n    margin-right: 10px;\n`;\n\nconst StyledDesccription = styled(Description)`\n    font-size: ${({ theme }) => theme.fontSize.s};\n`;\n\nconst WeatherComponent = ({ image, value }) => {\n    \n    return (\n    <StyledWrapper>\n        <StyledImage src={image} alt={value} />\n        <>\n            <StyledDesccription>{value}</StyledDesccription>\n        </>\n    </StyledWrapper>\n    );\n}\n\nWeatherComponent.propTypes = {\n    image: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n}\n\nexport default WeatherComponent;","export default __webpack_public_path__ + \"static/media/feelsLike.2c9857d9.svg\";","export default __webpack_public_path__ + \"static/media/humidity.382f5deb.svg\";","export default __webpack_public_path__ + \"static/media/pressure.208c4c4c.svg\";","export default __webpack_public_path__ + \"static/media/tempMax.b70fc12e.svg\";","export default __webpack_public_path__ + \"static/media/tempMin.b0a8abe9.svg\";","export default __webpack_public_path__ + \"static/media/windSpeed.fce22008.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { devices } from 'theme/device';\nimport Description from 'components/atoms/Description/Description';\nimport Heading from 'components/atoms/Heading/Heading';\nimport WeatherComponent from 'components/atoms/WeatherComponent/WeatherComponent';\nimport feelsLikeIcon from 'assets/icons/feelsLike.svg';\nimport humidityIcon from 'assets/icons/humidity.svg';\nimport pressureIcon from 'assets/icons/pressure.svg';\nimport tempMaxIcon from 'assets/icons/tempMax.svg';\nimport tempMinIcon from 'assets/icons/tempMin.svg';\nimport windSpeedIcon from 'assets/icons/windSpeed.svg';\n\nconst StyledWrapper = styled.section`\n    display: grid;\n    grid-template-rows: 60% 40%;\n`;\n\nconst StyledInformationWrapper = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n\n    :last-of-type {\n        justify-content: space-around;\n    }\n`;\n\nconst StyledMainConditions = styled.div`\n     margin-right: 10px;\n\n    @media ${devices.tablet} {\n        margin-right: 30px;\n    }\n`;\n\nconst StyledHeading = styled(Heading)`\n    font-size: 70px;\n    font-weight: ${({ theme }) => theme.fontWeight.medium};\n    margin: 0;\n\n    @media ${devices.tablet} {\n        font-size: 100px;\n    }\n`;\n\nconst WeatherDetailsSection = ({ \n    description,\n    feelsLike, \n    humidity,\n    temp,  \n    tempMax, \n    tempMin, \n    pressure, \n    windSpeed, \n}) => {\n\n    const weatherConditions = {\n        humidity: {\n            icon: humidityIcon,\n            value: `humidity ${humidity}%`,\n        },\n        feelsLike: {\n            icon: feelsLikeIcon,\n            value: `perceptible ${feelsLike}\\u{2103}`,\n        },\n        pressure: {\n            icon: pressureIcon,\n            value: `pressure ${pressure}hPa`,\n        },\n        tempMax: {\n            icon: tempMaxIcon,\n            value: `max ${tempMax}\\u{2103}`,\n        },\n        tempMin: {\n            icon: tempMinIcon,\n            value: `min. ${tempMin}\\u{2103}`\n        },\n        windSpeed: {\n            icon: windSpeedIcon,\n            value: `wind ${windSpeed}m/s`,\n        }\n    }\n\n        return (\n            <StyledWrapper>\n                <StyledInformationWrapper>\n                    <StyledMainConditions>\n                        <StyledHeading>{temp}&deg;C</StyledHeading>\n                        <Description>{description}</Description>\n                    </StyledMainConditions>\n                    <div>\n                        <WeatherComponent image={weatherConditions.tempMax.icon} value={weatherConditions.tempMax.value} />\n                        <WeatherComponent image={weatherConditions.tempMin.icon} value={weatherConditions.tempMin.value} />\n                        <WeatherComponent image={weatherConditions.feelsLike.icon} value={weatherConditions.feelsLike.value} />\n                    </div>\n                </StyledInformationWrapper>\n                <StyledInformationWrapper>\n                    <WeatherComponent image={weatherConditions.windSpeed.icon} value={weatherConditions.windSpeed.value} />\n                    <WeatherComponent image={weatherConditions.pressure.icon} value={weatherConditions.pressure.value} />\n                </StyledInformationWrapper>\n        </StyledWrapper>\n        );\n} \n\nWeatherDetailsSection.propTypes = {\n    description: PropTypes.string.isRequired,\n    feelsLike: PropTypes.string.isRequired,\n    humidity: PropTypes.number.isRequired,\n    pressure: PropTypes.number.isRequired,\n    temp: PropTypes.string.isRequired,\n    tempMax: PropTypes.string.isRequired,\n    tempMin: PropTypes.string.isRequired,\n    windSpeed: PropTypes.number.isRequired,\n}\n\nexport default WeatherDetailsSection;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nimport Description from 'components/atoms/Description/Description';\n\nconst StyledWeatherForecastWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-right: 20px;\n    width: 80px;\n    :first-of-type {\n        margin-left: 70px;\n    }\n    :last-of-type {\n        margin-right: 0;\n    }\n`;\n\nconst StyledDate = styled.p`\n    white-space: initial;\n    margin: 0 0 5px 0;\n`;\n\nconst StyledImage = styled.img`\n    width: 50px;\n    height: 50px;\n`;\n\nconst StyledDescription = styled(Description)`\n    margin: 0;\n    width: 70px;\n    text-align: center;\n    word-wrap:break-word;\n    white-space: normal;\n`;\n\nconst nextDay = (index) => {\n    \n    const today = new Date();\n    let nextDay = new Date();\n    nextDay.setDate(today.getDate() + index);\n    nextDay = `${nextDay.getDate()}.${nextDay.getMonth()+1}`;\n    return nextDay;\n}\n\nconst WeatherForecast = ({ index, icon, temp, description }) => (\n    <StyledWeatherForecastWrapper>\n        <StyledDate>{nextDay(index)}</StyledDate>\n        <StyledImage src={`http://openweathermap.org/img/wn/${icon}@2x.png`} alt='Weather icon' />\n        <StyledDescription>{temp}</StyledDescription>\n        <StyledDescription>{description}</StyledDescription>\n    </StyledWeatherForecastWrapper>\n);\n\nWeatherForecast.propTypes = {\n    icon: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired\n}\n\nexport default WeatherForecast;","import React from \"react\";\nimport styled from \"styled-components\";\nimport WeatherForecast from \"../WeatherForecast/WeatherForecast\";\n\nconst StyledWrapper = styled.section`\n    margin: 0 auto;\n    width: 90%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-around;\n    overflow: auto;\n    white-space: nowrap;\n    ::-webkit-scrollbar {\n        width: 10px;\n    }\n     ::-webkit-scrollbar-track {\n        background-color: ${({ theme }) => theme.colors.bright};\n        border-radius: 50px;\n        padding: 10px\n    }\n     ::-webkit-scrollbar-thumb {\n        border-radius: 50px;\n        background: ${({ theme }) => theme.colors.accent};\n        background: linear-gradient(254deg, ${({ theme }) => theme.colors.accent} 0%, rgba(38,38,38,1) 100%);\n    }\n`;\n\nconst WeatherForecastSection = ({date, forecast}) => {\n\n    return (\n    <StyledWrapper>\n        {\n            forecast.map((item, index) => (\n                <WeatherForecast index={index+1} icon={item.weather[0].icon} description={item.weather[0].description} temp={`${item.temp.day.toFixed()} \\u{2103}`} key={`${index}-${item.weather[0].id}`}/>\n        ))\n        }\n    </StyledWrapper>\n    \n);}\n\nexport default WeatherForecastSection;","import React from \"react\";\nimport AppContext from \"context\";\nimport styled from \"styled-components\";\nimport { devices } from \"theme/device\";\nimport Header from \"components/molecules/Header/Header\";\nimport DateSection from \"components/molecules/DateSection/DateSection\";\nimport WeatherDetailsSection from \"components/organisms/WeatherDetailsSection/WeatherDetailsSection\";\nimport WeatherForecastSection from \"components/molecules/WeatherForecastSection/WeatherForecastSection\";\nimport Button from \"components/atoms/Button/Button\";\n\nconst StyledMain = styled.main`\n    width: 300px;\n    height: 90vh;\n    position: relative;\n    margin: 10px;\n    display: grid;\n    grid-template-rows: 15% 50% 20% 15%;\n\n    @media ${devices.tablet} {\n    height: 80vh;\n    width: 500px;\n    border: 1px solid ${({ theme }) => theme.colors.bright};\n    margin: auto;\n    }\n`;\n\nconst StyledButton = styled(Button)`\n    width: 50%;\n    margin: 0 auto;\n`;\n\nconst DetailsView = ({ clock, day }) => (\n    <AppContext.Consumer>\n        {(context) => {\n            const weather = context.weatherData;\n\n            return(\n            <StyledMain>\n            <Header \n                cityName={context.city}\n                mainDescription={weather.weather[0].main}\n                imgSrc={`http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`}\n                imgAlt={weather.weather[0].main}\n                \n            />\n            <WeatherDetailsSection \n                windSpeed={weather.wind.speed}\n                humidity={weather.main.humidity}\n                temp={weather.main.temp.toFixed()}\n                tempMax={weather.main.temp_max.toFixed()}\n                tempMin={weather.main.temp_min.toFixed()}\n                feelsLike={weather.main.feels_like.toFixed()}\n                pressure={weather.main.pressure}\n                description={weather.weather[0].description}\n            />\n            {!context.showForecast && <StyledButton onClick={context.getForecastWeather}>check forecast</StyledButton>}\n            {context.showForecast && <WeatherForecastSection forecast={context.forecastWeatherData.daily}/>}\n            <DateSection clock={clock} day={day} />\n        </StyledMain>\n        )}}\n    </AppContext.Consumer>\n    \n);\n\nexport default DetailsView;","import React from \"react\";\nimport AppContext from \"context\";\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport MainTemplate from \"templates/MainTemplate\";\nimport MainView from \"./MainView\";\nimport DetailsView from \"./DetailsView\";\n\nconst days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\nconst months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\nconst apiKey = process.env.REACT_APP_API_KEY;\n\nclass Root extends React.Component {\n    \n    state = {\n        time: new Date(),\n        day: null,\n        clock: null,\n        city: null,\n        weatherData: null,\n        forecastWeatherData: null,\n        errorMessageCurrent: null,\n        errorMessageForecast: null,\n        redirect: false,\n        coordinates: {\n            lon: null,\n            lat: null\n        },\n        showForecast: false,\n    }\n\n    componentDidMount() {\n        this.intervalId = setInterval(\n            () => this.tick(),\n            1000\n        );\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.intervalId);\n    }\n\n    tick() {\n        this.setState({\n          time: new Date(),\n          clock: this.state.time.toLocaleTimeString(navigator.language, {\n            hour: '2-digit',\n            minute:'2-digit'\n          }),\n          day: `${days[this.state.time.getDay()]}, ${this.state.time.getDate()} ${months[this.state.time.getMonth()]}`\n        });\n    }\n\n    getCityName = (e) => {\n        e.preventDefault();\n    \n        this.setState({\n          city: e.target.value,\n        });\n    \n      };\n\n    checkCurrentWeather = async () => {\n        const apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.city}&units=metric&appid=${apiKey}`;\n        const response = await fetch(apiUrl);\n\n        const data = await response.json();\n\n        if(data.cod == '200') {\n            this.setState({\n                weatherData: data,\n                errorMessageCurrent: null,\n                errorMessageForecast: null,\n                redirect: true,\n                coordinates: {\n                    lon: data.coord.lon,\n                    lat: data.coord.lat,\n                }\n            });\n            \n        } else if (data.cod === '404') {\n            this.setState({\n                errorMessageCurrent: data.message,\n                redirect: false,\n            })\n        }\n    }\n\n    checkForecastWeather = async () => {\n\n        const apiUrl = `https://api.openweathermap.org/data/2.5/onecall?lat=${this.state.coordinates.lat}&lon=${this.state.coordinates.lon}&exclude={daily}&units=metric&appid=${apiKey}`;\n        const response = await fetch(apiUrl);\n\n        const data = await response.json();\n\n        this.setState({\n            forecastWeatherData: data,\n            errorMessageCurrent: null,\n            errorMessageForecast: null,\n            redirect: true,\n            showForecast: true,\n            });\n    }\n\n    getWeather = async (e) => {\n        e.preventDefault();\n        await this.checkCurrentWeather();\n    }\n\n    goBack = () => (\n        this.setState({\n            redirect: false,\n        })\n    );\n\n    render() {\n\n        const contextElement = {\n            ...this.state,\n            getCityName: this.getCityName,\n            getWeather: this.getWeather,\n            getForecastWeather: this.checkForecastWeather\n        }\n\n        return (\n            <BrowserRouter>\n            <MainTemplate>\n                <AppContext.Provider value={contextElement}>\n                    <Routes>\n                        <Route exact='true' path='/' element={<MainView />} />\n                        <Route path='/details' element={<DetailsView />} />\n                    </Routes>\n                </AppContext.Provider>\n            </MainTemplate>\n            </BrowserRouter>\n        );\n    }\n} \n\nexport default Root;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'views/Root';\nimport './index.css';\n\nReactDOM.render(\n    <Root />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}